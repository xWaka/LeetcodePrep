medium

Given an array of integers arr and two integers k and threshold, return the number of sub-arrays of size k and average greater than or equal to threshold.

 

Example 1:

Input: arr = [2,2,2,2,5,5,5,8], k = 3, threshold = 4
Output: 3
Explanation: Sub-arrays [2,5,5],[5,5,5] and [5,5,8] have averages 4, 5 and 6 respectively. All other sub-arrays of size 3 have averages less than 4 (the threshold).
Example 2:

Input: arr = [11,13,17,23,29,31,7,5,2,3], k = 3, threshold = 5
Output: 6
Explanation: The first 6 sub-arrays of size 3 have averages greater than 5. Note that averages are not integers.
 

Constraints:

1 <= arr.length <= 105
1 <= arr[i] <= 104
1 <= k <= arr.length
0 <= threshold <= 104

---------------------------mysolution

var numOfSubarrays = function(arr, k, threshold) {
   //Find sum of first k int
    
    let currSum = 0
    for(let i = 0; i < k ; i++){
        currSum += arr[i]
    }
    
    // Add to counter if the average of sum is over k is equal to or greater than       the threshold
    let average = currSum / k
    let counter = 0
    
    if(average >= threshold){
        counter++
    }
    
  //For the rest of the array
     for( let j = k; j < arr.length; j++){
         //-slide window up by one element
             currSum  -= arr[j-k]
             currSum += arr[j]
        //-calculate the average of these k elements
            
       let currAverage = currSum / k
       
       //update counter
       if(currAverage >= threshold){
           counter++
       }
     }
        
 // Return counter
    return counter
};
